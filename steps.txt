Step-by-Step Guide for Character Network Analysis on Armenian Texts
This guide provides a detailed approach to executing a character network analysis project on Armenian literary or historical texts using machine learning techniques. You’ll extract character names with Named Entity Recognition (NER), build co-occurrence networks to represent relationships, and visualize the results.

Step 1: Acquire and Prepare the Text Data

Objective: Obtain Armenian texts in a machine-readable format.
Instructions:
Select Armenian literary works or historical documents from digital libraries like the Armenian Virtual College Digital Library (https://avc-agbu.org/library).
Convert PDFs or images to text using Tesseract OCR (https://github.com/tesseract-ocr/tesseract), which supports Armenian.
Save files in UTF-8 encoding to handle Armenian characters correctly.




Step 2: Preprocess the Text Data

Objective: Clean and segment the text for analysis.
Instructions:
Remove irrelevant sections (e.g., footnotes) using Python’s re library.
Split text into units (e.g., chapters or paragraphs) to define co-occurrence.
Tokenize the text with spaCy’s multilingual model (https://spacy.io/models/xx) or NLTK (https://www.nltk.org/).




Step 3: Extract Character Names Using NER

Objective: Identify character names in the text.
Instructions:
Download the pioNER dataset for Armenian NER from https://github.com/ispras-texterra/pioner.
Fine-tune XLM-RoBERTa (https://huggingface.co/FacebookAI/xlm-roberta-base) on pioNER using Hugging Face’s token classification tutorial (https://huggingface.co/course/chapter7/2).
Apply the fine-tuned model to your text to extract character names.




Step 4: Build the Co-occurrence Network

Objective: Create a network of character relationships.
Instructions:
Define co-occurrence (e.g., characters in the same chapter).
Count co-occurrences across text units and build a graph with NetworkX (https://networkx.org/documentation/stable/tutorial.html).
Add edge weights based on co-occurrence frequency.




Step 5: Visualize the Network

Objective: Display the character network.
Instructions:
Use NetworkX with Matplotlib (https://matplotlib.org/stable/users/index.html) for basic visualization.
For advanced visuals, export to Gephi (https://gephi.org/) and apply layouts or community detection.




Step 6: Analyze and Interpret the Network

Objective: Gain insights from the network.
Instructions:
Compute metrics like centrality and clustering with NetworkX (https://networkx.org/documentation/stable/reference/algorithms/index.html).
Interpret results in the context of the narrative, identifying key characters or groups.




Additional Tips

Consolidate character aliases manually or with coreference resolution.
Experiment with text unit sizes for optimal co-occurrence patterns.
Use Google Colab for resource-intensive tasks like model training.

By following these steps, you’ll uncover meaningful character relationships in your Armenian texts using NER and network analysis.
